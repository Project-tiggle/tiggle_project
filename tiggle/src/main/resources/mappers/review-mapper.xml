<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewMapper">
<!-- namespace (이름공간) == 패키지와 같음 : 매퍼 영역에 이름을 부여준 것으로 이해하면 됨 -->
	<resultMap type="Review" id="resultReview">
			<result property="totalId" column="TOTAL_ID" />
			<result property="uuid" column="UUID" />
			<result property="rNum" column="R_NUM" />
			<result property="nickname" column="NICKNAME" />
			<result property="rContents" column="R_CONTENTS" />
			<result property="writeDate" column="WRITE_DATE" />
			<result property="updateDate" column="UPDATE_DATE" />
			<result property="updateYN" column="UPDATE_YN" />
			<result property="deleteDate" column="DELETE_DATE" />
			<result property="deleteYN" column="DELETE_YN" />
	</resultMap>
	
	
	

	<!-- ajax 테스트용 : 최근 등록된 마지막 공지글 한 개 조회용 -->
	<select id="selectReview" parameterType="Review" resultMap="resultReview">
		select * 
		from TB_REVIEW
		where uuid = #{ uuid }
		AND total_id = #{ totalId }
	</select>
	
	<select id="selectListCount" resultType="_int" parameterType="string">
		select count(*)
		from TB_REVIEW
		where total_id = #{ no }
	</select>
	
	<select id="reviewWriterCount" resultType="_int" parameterType="Review">
		select count(uuid)
		from TB_REVIEW
		where uuid = #{ uuid }
		AND total_id = #{ totalId }
	</select>
	
	
	<select id="selectList" resultMap="resultReview" parameterType="ReviewPaging">
		select *
		from (select rownum rnum,
					 TOTAL_ID,
					 R_NUM,
					 UUID,
					 NICKNAME,
					 R_CONTENTS,
					 WRITE_DATE,
					 UPDATE_DATE, 
            		 UPDATE_YN,
            		 DELETE_DATE,
            		 DELETE_YN
        from (select * from TB_REVIEW
        	  where total_id = #{ totalId }
              order by write_date desc, R_NUM asc))
		where rnum between #{ startRow } and #{ endRow }
	</select>
	
	<!-- dml -->
	
	<!-- 새 한줄평 등록용 쿼리 -->
	<insert id="insertReview" parameterType="Review">
		insert into TB_REVIEW
		values (#{ totalId },
				#{ uuid },
				seq_rnum.nextval,
				#{ nickname },
				#{ rContents },
				sysdate,
				null,
				null,
				null,
				null
				)
	</insert>	
	
	<insert id="insertReviewD" parameterType="Review">
		insert into TB_REVIEW_Delete
		values (#{ totalId },
				#{ uuid },
				#{ rNum },
				#{ nickname },
				#{ rContents },
				#{ writeDate },
				#{ updateDate },
				#{ updateYN },
				sysdate,
				'Y'
				)
	</insert>	
	
	<!-- 한줄평 삭제용 쿼리 -->
	<delete id="deleteReview" parameterType="_int">
		delete from	TB_REVIEW
		where r_num = #{ rNum }
	</delete>
	
	<!-- 한줄평 수정용 쿼리 -->
	<update id="updateReview" parameterType="Review">
		update TB_REVIEW
		set	r_contents = #{ rContents }, 
			update_date = sysdate, 
			update_yn = 'Y'
		where r_num = #{ rNum }
	</update> 
	


	
	
</mapper>








