<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="exhibitionMapper">
<!-- namespace (이름공간) == 패키지와 같음 : 매퍼 영역에 이름을 붙여준 것으로 이해하면 됌 -->

	<!-- select 조회한 결과 매핑 처리하는 용도의 엘리먼트임
		 결과매핑 : select 한 행의 컬럼값을 한개씩 dto 객체의 필드에 옮겨 저장하는 것
		 property 는 클래스의 필드명, column 은 데이터베이스 테이블의 컬럼명을 기술하면 됨
	 -->
		
	<resultMap type="Exhibition" id="resultExhibition">
		<result property="totalId" column="total_Id" />
		<result property="uuid" column="uuid" />
		<result property="title" column="title" />
		<result property="contributor" column="contributor" />
		<result property="description" column="E_description" />
		<result property="eventSite" column="event_Site" />
		<result property="detailEventSite" column="detail_Event_Site" />
		<result property="latitude" column="latitude" />
		<result property="longitude" column="longitude" />
		<result property="genre" column="genre" />
		<result property="contactPoint" column="contact_Point" />
		<result property="viewCounter" column="view_Counter" />
		<result property="url" column="url" />
		<result property="period" column="period" />
		<result property="startDate" column="start_Date" />
		<result property="endDate" column="end_Date" />
		<result property="approvalStatus" column="approval_Status" />
		<result property="category" column="E_category" />
		<result property="fileUrl" column="file_Url" />
		<result property="charge" column="charge" />
	</resultMap>
	
	<!-- dao 에서 사용되는 쿼리문(sql문)을 각 엘리멘트 안에 작성함 
		 마이바티스는 기본 PreparedStatement 를 사용함
		 ? 를 #{변수명 | 필드명} 필드명을 사용하면 자동으로 getter 가 작동됨
		 resultType 은 반환되는 자료형 표기하면 됨
		 resultMap 은 결과를 매핑할 경우 사용할 resultMap 의 id 명을 표기함
		 단, resultType 과 resultMap 은 둘 중 하나만 사용해야 함
	-->
	<!-- <select id="selectLogin" parameterType="User" resultMap="resultUser">
		select * from users where userid = #{userId} and userpwd = #{userPwd}
	</select> -->
	
	<!-- 전시정보 조회용 쿼리 -->
	<select id="selectExhibition" parameterType="string" resultMap="resultExhibition">
		select * from TB_EXHIBITION_FAIR  
		order by TO_NUMBER(total_Id) asc
	</select>
	
	<select id="selectList" resultMap="resultExhibition" parameterType="Paging">
		select *
			from (select rownum rnum,
						 total_id,
						 uuid,
						 title,
		  				 contributor,
						 E_DESCRIPTION,
						 event_site,
						 detail_event_site,
						 latitude,
						 longitude,
						 genre,
						 contact_point,
						 view_counter,
						 E_url,
						 period,
						 start_date,
						 end_date,
						 approval_status,
						 E_category,
						 file_url,
						 charge
				   from (select * from TB_EXHIBITION_FAIR
				   order by TO_NUMBER(total_id) asc))
		where rnum between #{ startRow } and #{ endRow }
	</select>
	
	<select id="selectListTop5" resultMap="resultExhibition" parameterType="Paging">
		select *
		from (select rownum rnum,
					 total_id,
					 uuid,
					 title,
					 contributor,
					 E_description,
					 event_site,
					 detail_event_site,
					 latitude,
					 longitude,
					 genre,
					 contact_point,
					 view_counter, 
					 E_url,
					 period,
					 start_date,
					 end_date,
					 approval_status,
					 E_category,
					 file_url,
					 charge
				from (select * from TB_EXHIBITION_FAIR
		     	order by TO_DATE(start_date) desc))
		where rnum between 1 and 5;
	</select>
	
		
	<select id="selectListCount" resultType="_int">
		select count(*)
		from TB_EXHIBITION_FAIR
	</select>		
	
	<!-- PK 전달을 위해 total_id를 추출해주는 쿼리 -->
	<select id="selectListOne" parameterType="string" resultMap="resultExhibition">
		select * from TB_EXHIBITION_FAIR
		where total_id = #{ no }
	</select>
		
	<!-- 전시정보 데이터 입력 -->
	<insert id="insertExhibition" parameterType="Exhibition">
		insert into TB_Exhibition_FAIR
		values (
			   total_Id_Seq,
			   #{ uuid },
			   #{ title },
			   #{ contributor },
			   #{ description },
			   #{ eventSite },
			   default,
			   default,
			   default,
			   #{ genre },
			   default,
			   default,
			   #{ url },
		 	   #{ period },
		 	   TO_CHAR(SUBSTR(#{ period }, 1, 10), yyyy-MM-dd),
		 	   TO_CHAR(SUBSTR(#{ period }, 12, 21), yyyy-MM-dd),
		 	   default,
		 	   default,
		 	   default,
		 	   #{ charge }
		 	   )
	</insert>
	
	<!-- 전시정보 삭제용 쿼리 -->
	<delete id="deleteExhibition" parameterType="string">
		delete from TB_EXHIBITION_FAIR where totalId = #{ totalId }
	</delete>
	
</mapper>