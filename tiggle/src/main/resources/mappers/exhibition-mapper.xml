<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="exhibitionMapper">
<!-- namespace (이름공간) == 패키지와 같음 : 매퍼 영역에 이름을 붙여준 것으로 이해하면 됌 -->

	<!-- select 조회한 결과 매핑 처리하는 용도의 엘리먼트임
		 결과매핑 : select 한 행의 컬럼값을 한개씩 dto 객체의 필드에 옮겨 저장하는 것
		 property 는 클래스의 필드명, column 은 데이터베이스 테이블의 컬럼명을 기술하면 됨
	 -->
	<resultMap type="Exhibition" id="resultTop10">
			<result property="totalId" column="total_Id" />
			<result property="title" column="title" />
			<result property="cntcInsttNm" column="CNTC_INSTT_NM" />
			<result property="startDate" column="start_Date" />
			<result property="endDate" column="end_Date" />
			<result property="viewCounter" column="view_Counter" />
			<result property="fileUrl" column="file_Url" />
	</resultMap>
	
		
	<resultMap type="Exhibition" id="resultExhibition">
		<result property="totalId" column="TOTAL_ID" />
		<result property="uuid" column="UUID" />
		<result property="title" column="TITLE" />
		<result property="localId" column="LOCAL_ID" />
		<result property="contributor" column="CONTRIBUTOR" />
		<result property="cntcInsttNm" column="CNTC_INSTT_NM" />
		<result property="description" column="E_DESCRIPTION" />
		<result property="eventSite" column="EVENT_SITE" />
		<result property="detailEventSite" column="DETAIL_EVENT_SITE" />
		<result property="latitude" column="LATITUDE" />
		<result property="longitude" column="LONGITUDE" />
		<result property="genre" column="GENRE" />
		<result property="contactPoint" column="CONTACT_POINT" />
		<result property="viewCounter" column="VIEW_COUNTER" />
		<result property="url" column="E_URL" />
		<result property="period" column="PERIOD" />
		<result property="startDate" column="START_DATE" />
		<result property="endDate" column="END_DATE" />
		<result property="approvalStatus" column="APPROVAL_STATUS" />
		<result property="category" column="E_CATEGORY" />
		<result property="fileUrl" column="FILE_URL" />
		<result property="charge" column="CHARGE" />
	</resultMap>
	
	<!-- dao 에서 사용되는 쿼리문(sql문)을 각 엘리멘트 안에 작성함 
		 마이바티스는 기본 PreparedStatement 를 사용함
		 ? 를 #{변수명 | 필드명} 필드명을 사용하면 자동으로 getter 가 작동됨
		 resultType 은 반환되는 자료형 표기하면 됨
		 resultMap 은 결과를 매핑할 경우 사용할 resultMap 의 id 명을 표기함
		 단, resultType 과 resultMap 은 둘 중 하나만 사용해야 함
	-->
	<!-- <select id="selectLogin" parameterType="User" resultMap="resultUser">
		select * from users where userid = #{userId} and userpwd = #{userPwd}
	</select> -->
	
	<!-- 전시정보 조회용 쿼리 -->
	<select id="selectExhibition" parameterType="string" resultMap="resultExhibition">
		select * from TB_EXHIBITION_FAIR  
		order by TO_NUMBER(total_Id) asc
	</select>
	
	<select id="selectList" resultMap="resultExhibition" parameterType="Paging">
		select *
		from (select rownum rnum,
					 total_id,
					 uuid,
					 title,
					 local_id,
	  				 contributor,
	  				 CNTC_INSTT_NM,
					 E_DESCRIPTION,
					 event_site,
					 detail_event_site,
					 latitude,
					 longitude,
					 genre,
					 contact_point,
					 view_counter,
					 E_url,
					 period,
					 start_date,
					 end_date,
					 approval_status,
					 E_category,
					 file_url,
					 charge
			   from (select * from TB_EXHIBITION_FAIR
			   where APPROVAL_STATUS = 'Y'
			   order by TO_DATE(end_date) desc)
			   )
		where rnum between #{ startRow } and #{ endRow }
	</select>
	
	<select id="selectListTop5" resultMap="resultExhibition" parameterType="Paging">
		select *
		from (select rownum rnum,
					 total_id,
					 uuid,
					 title,
					 local_Id,
					 contributor,
					 CNTC_INSTT_NM,
					 E_description,
					 event_site,
					 detail_event_site,
					 latitude,
					 longitude,
					 genre,
					 contact_point,
					 view_counter, 
					 E_url,
					 period,
					 start_date,
					 end_date,
					 approval_status,
					 E_category,
					 file_url,
					 charge
				from (select * from TB_EXHIBITION_FAIR
				where APPROVAL_STATUS = 'Y'
		     	order by TO_DATE(end_date) desc))
		where rnum between 1 and 5
		AND end_date >= sysdate
		
	</select>
	
	<!-- 메인 출력 포스터 관련 쿼리************************************************************ -->
	
	<!-- 조회수 증가용 쿼리문 -->
	<update id="updateAddReadCount" parameterType="string">
		update TB_EXHIBITION_FAIR
		set view_counter = view_counter + 1
		where total_id = #{ totalId }
	</update>
	
	<!-- ajax 요청 : 최근 등록 게시글 10개 조회용 (top-N) -->
	<select id="selectListTop10" resultMap="resultTop10">
		SELECT *
		FROM (SELECT rownum rnum,
					 total_id,
					 title,
					 CNTC_INSTT_NM,
					 view_counter, 
					 start_date,
					 end_date,
					 file_url
     		  	from (select * from TB_EXHIBITION_FAIR
     		  	where APPROVAL_STATUS = 'Y'
		     	order by view_counter desc,
		     			 TO_DATE(end_date) desc))
		where rnum between 1 and 10
		AND end_date >= sysdate
	</select>

	<select id="selectListSameMon" resultMap="resultTop10" >
		select *
		from (select rownum rnum,
					 total_id,
					 uuid,
					 title,
					 CNTC_INSTT_NM,
					 view_counter, 
					 start_date,
					 end_date,
					 file_url
				from (select * from TB_EXHIBITION_FAIR
				where APPROVAL_STATUS = 'Y'
		     	order by TO_DATE(start_date))) 
        where end_date >= sysdate AND
        EXTRACT(month from start_date) = extract(month from sysdate) 
        AND EXTRACT(year from start_date) >= EXTRACT(year from sysdate)
	</select>
		
	<select id="selectListCount" resultType="_int">
		select count(*)
		from TB_EXHIBITION_FAIR
		where end_date >= sysdate
		AND APPROVAL_STATUS = 'Y'
	</select>		
	
	<!-- PK 전달을 위해 total_id에 해당하는 값을 추출해주는 쿼리 -->
	<select id="selectExhibitionOne" parameterType="string" resultMap="resultExhibition">
		select * from TB_EXHIBITION_FAIR
		where total_id = #{ no }
	</select>
		
	<!-- 전시정보 데이터 입력 -->
	<insert id="insertExhibition" parameterType="Exhibition">
		insert into TB_Exhibition_FAIR (
				TOTAL_ID,
				TITLE,
				LOCAL_ID,
				CONTRIBUTOR,
				CNTC_INSTT_NM,
				E_DESCRIPTION,
				EVENT_SITE,
				GENRE,
				E_URL,
				PERIOD,
				START_DATE,
				END_DATE,
				FILE_URL,
				CHARGE		
				)
		values (
			   total_Id_Seq.nextval,
			   #{ title },
			   #{ localId },
			   #{ contributor },
			   #{ cntcInsttNm },
			   #{ description },
			   #{ eventSite },
			   #{ genre },
			   #{ url },
		 	   #{ period },
		 	   TO_DATE(SUBSTR(#{ period }, 1, 10), 'yyyy-MM-dd'),
		 	   TO_DATE(SUBSTR(#{ period }, 12, 21), 'yyyy-MM-dd'),
		 	   #{ fileUrl },
		 	   #{ charge }
		 	   )
	</insert>
	
	<!-- 전시정보 삭제용 쿼리 -->
	<delete id="deleteExhibition" parameterType="string">
		delete from TB_EXHIBITION_FAIR where totalId = #{ totalId }
	</delete>
	
	<delete id="deleteApi">
		delete from TB_EXHIBITION_FAIR where uuid is null
	</delete>
	
	
	<!-- 검색관련 목록 총 갯수 조회용 쿼리 -->
	<select id="selectSearchTitleCount" resultType="_int" parameterType="String">
		select count(*) from TB_EXHIBITION_FAIR
		where title like '%' || #{ keyword } || '%'
		AND end_date >= sysdate
	</select>
	
	<!-- 전시 검색용 쿼리문 -->
	<select id="selectSearchTitle" resultMap="resultExhibition" parameterType="Search">
		select *
		from (select rownum rnum, 
					 UUID,
					 TOTAL_ID,
					 TITLE,
					 LOCAL_ID,
					 CONTRIBUTOR,
					 CNTC_INSTT_NM,
					 E_DESCRIPTION,
					 EVENT_SITE,
					 DETAIL_EVENT_SITE,
					 LATITUDE,
					 LONGITUDE,
					 GENRE,
					 CONTACT_POINT,
					 VIEW_COUNTER,
					 E_URL,
					 PERIOD,
					 START_DATE,
					 END_DATE,
					 APPROVAL_STATUS,
					 E_CATEGORY,
					 FILE_URL,
					 CHARGE
	          from (select * from TB_EXHIBITION_FAIR
	        		where title like '%' || #{ keyword } || '%'
	        		AND end_date >= sysdate
	        		AND APPROVAL_STATUS = 'Y'
	                order by end_date desc))
		where rnum between #{ startRow } and #{ endRow }
	</select>
	
	
	
</mapper>